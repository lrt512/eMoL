version: '3.8'
services:
  app:
    build: .
    ports:
      - "8000:80"
    environment:
      - EMOL_DEV=1
      - AWS_DEFAULT_REGION=ca-central-1
      - SSM_ENDPOINT_URL=http://host.docker.internal:4566
      - OAUTH_PROVIDER_URL=http://host.docker.internal:8080
    entrypoint: > 
      sh -c "
        /opt/emol/setup_files/bootstrap.sh &&
        /opt/emol/setup_files/db.sh &&
        poetry run python manage.py runserver 0.0.0.0:80
      "    
    volumes:
      - .:/opt/emol
      - data:/mnt/data
    depends_on:
      - db
      - localstack
      - oauth-mock
    networks:
      - emol-network

  localstack:
    image: localstack/localstack
    environment:
      - SERVICES=ssm
      - DEBUG=1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=ca-central-1
    ports:
      - "4566:4566"
      - "4510-4559:4510-4559"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - emol-network

  db:
    image: mysql:latest
    environment:
      - MYSQL_DATABASE=emol
      - MYSQL_USER=emol_db_user
      - MYSQL_PASSWORD=emol_db_password
      - MYSQL_ROOT_PASSWORD=root_password
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - emol-network

  oauth-mock:
    image: ghcr.io/navikt/mock-oauth2-server:2.1.1
    ports:
      - "8080:8080"
    networks:
      - emol-network

networks:
  emol-network:
    driver: bridge

volumes:
  data:
  mysql_data:
